[tox]
isolated_build = true
skip_missing_interpreters = true
minversion = 3.14
requires = virtualenv >= 20.0.34

[testenv]
description = An environment designed to facilitate testing (running the test suite)
passenv = *
setenv =
    # It will overide variables in passenv in case of collision
    PYTHONPATH = {toxinidir}{/}tests
    PYTHONBUFFERED = yes
    # Fallback File name for storing output of for all poetry export operations
    DEFAULT_REQS_FILE = reqs.txt
    CICD_WORKFLOW_YAML_FILE = .github/workflows/cicd.yml


# POETRY EXPORT
[testenv:pin-deps]
# Pin Deps        : tox -e pin-deps
# With Test Extras: tox -e pin-deps -- -E test
# With Target File: REQS_FILE=reqs-test.txt tox -e pin-deps -- -E test
description = Pin dependencies from poetry lock. Use the REQS_FILE var, for custom file name.
basepython = {env:TOXPYTHON:python3}
passenv = REQS_FILE
skip_install = true
deps =
    poetry
    poetry-plugin-export
commands =
    python -m poetry export -f requirements.txt -o {env:REQS_FILE:{env:DEFAULT_REQS_FILE}} {posargs}
    python -c 'print( "\n  Generated requirements file: " + "{env:REQS_FILE:{env:DEFAULT_REQS_FILE}}" );'

##### DOCUMENTATION #####
[docsenv]
setenv =
    {[testenv]setenv}
    SPELLCHECK=1

### DOCS BUILD ###
# export REQS_FILE=reqs-docs.txt && tox -e pin-deps -- -E docs && tox -r -e docs
[testenv:docs]
description = 'Build the documentation, leveraging Mkocs as a Static Site Generator (SSG).'
basepython = {env:TOXPYTHON:python3}
setenv = {[docsenv]setenv}
deps = -r {env:REQS_FILE:{env:DEFAULT_REQS_FILE:reqs-docs.txt}}
skip_install = true
commands_pre = python ./scripts/visualize-ga-workflow.py {env:CICD_WORKFLOW_YAML_FILE} -o docs/cicd_mermaid.md
commands = mkdocs build {posargs}

## SERVE LIVE DOCUMENTATION ##
# export REQS_FILE=reqs-docs.txt && tox -e pin-deps -- -E docs && tox -r -e docs-live
[testenv:docs-live]
description = Start documentation dev-server (with hot-reloading) for browser preview
basepython = {env:TOXPYTHON:python3}
setenv = {[docsenv]setenv}
deps = -r {env:REQS_FILE:{env:DEFAULT_REQS_FILE:reqs-docs.txt}}
skip_install = true
changedir = {toxinidir}
commands_pre = python ./scripts/visualize-ga-workflow.py {env:CICD_WORKFLOW_YAML_FILE} -o docs/cicd_mermaid.md
commands = mkdocs serve
